#include "led.h"
#include "driver/gpio.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_log.h"

/** @brief Tag used for ESP logging */
static const char *TAG = "LED";

/** @brief GPIO number for the LED */
#define LED_PIN 9 

/** @brief Current state of the LED: false - OFF, true - ON */
static bool s_led_state = false;

/**
 * @brief Task to blink the LED every 500 milliseconds.
 *
 * This FreeRTOS task toggles the LED state every 500 ms, creating a blinking effect.
 *
 * @param pvParameters Parameter passed to the task (unused).
 */
void led_blink_task(void *pvParameters)
{
    while (1) {
        led_set_state(!s_led_state);
        vTaskDelay(pdMS_TO_TICKS(500));
    }
}

/**
 * @brief Initializes the LED GPIO configuration.
 *
 * Configures the LED GPIO pin as an output and ensures it is turned off initially.
 */
void led_init(void)
{
    gpio_config_t io_conf = {
        .pin_bit_mask = (1ULL << LED_PIN),
        .mode = GPIO_MODE_OUTPUT,
        .pull_up_en = false,
        .pull_down_en = false,
        .intr_type = GPIO_INTR_DISABLE
    };
    gpio_config(&io_conf);
    led_set_state(false);
    ESP_LOGI(TAG, "LED initialized.");
}

/**
 * @brief Sets the state of the LED.
 *
 * Turns the LED on or off based on the provided parameter.
 *
 * @param on `true` to turn the LED on, `false` to turn it off.
 */
void led_set_state(bool on)
{
    s_led_state = on;
    gpio_set_level(LED_PIN, on ? 1 : 0);
}

/**
 * @brief Retrieves the current state of the LED.
 *
 * @return `true` if the LED is on, `false` otherwise.
 */
bool led_get_state(void)
{
	return s_led_state;
}

/**
 * @brief Blinks the LED once.
 *
 * Turns the LED on for 200 ms and then turns it off for 200 ms to create a single blink.
 */
void led_blink_once(void)
{
    // Włącz
    led_set_state(true);
    vTaskDelay(pdMS_TO_TICKS(200));
    // Wyłącz
    led_set_state(false);
    vTaskDelay(pdMS_TO_TICKS(200));
}

/**
 * @brief Blinks the LED in pairs.
 *
 * Blinks the LED every 500 ms for approximately 5 seconds (10 cycles).
 */
void led_blink_pair(void)
{
    // Miga co 500 ms przez np. 5 sekund (10 cykli)
    for (int i = 0; i < 10; i++)
    {
        led_set_state(true);
        vTaskDelay(pdMS_TO_TICKS(500));
        led_set_state(false);
        vTaskDelay(pdMS_TO_TICKS(500));
    }
}
